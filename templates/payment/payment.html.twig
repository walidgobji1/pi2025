{% extends 'base.html.twig' %}

{% block title %}Paiement{% endblock %}

{% block body %}
<meta name="viewport" content="width=device-width, initial-scale=1" />

<style>
    .content-wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 80vh;
        padding: 20px;
    }

    .payment-container {
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        text-align: center;
        width: 400px;
    }

    h1 {
        font-size: 24px;
        margin-bottom: 10px;
    }

    .form-group {
        text-align: left;
        margin-bottom: 15px;
        width: 100%;
    }

    label {
        font-weight: bold;
    }

    input, select {
        width: 100%;
        padding: 8px;
        margin-top: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    #card-element {
        border: 1px solid #ccc;
        padding: 10px;
        border-radius: 5px;
        background: #fff;
    }

    button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        width: 100%;
        margin-top: 10px;
    }

    button:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }

    button:hover:not(:disabled) {
        background-color: #0056b3;
    }

    #payment-message {
        margin-top: 10px;
        font-weight: bold;
        color: red;
    }

    .loading-spinner {
        display: none;
        width: 20px;
        height: 20px;
        border: 3px solid rgba(0, 0, 0, 0.1);
        border-left-color: #007bff;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin: auto;
    }

    @keyframes spin {
        to { transform: rotate(360deg); }
    }
</style>

<div class="content-wrapper">
    <div class="payment-container">
        <h1>Page de Paiement</h1>
        <p>Veuillez entrer vos informations de paiement.</p>

        <form id="payment-form">
            <div class="form-group">
                <label for="card-element">Informations de la carte</label>
                <div id="card-element"><!-- Stripe Elements apparaîtra ici --></div>
            </div>

            <div class="form-group">
                <label for="country">Pays ou région</label>
                <select id="country" required>
                    <option value="FR">France</option>
                    <option value="US">Tunisia</option>
                    <option value="CA">Canada</option>
                    <option value="GB">Royaume-Uni</option>
                    <option value="DE">Allemagne</option>
                </select>
            </div>

            <div class="form-group">
                <label for="cardholder-name">Nom du titulaire</label>
                <input type="text" id="cardholder-name" placeholder="Nom du titulaire" required>
            </div>

            <div class="form-group">
                <label for="postal-code">Code postal</label>
                <input type="text" id="postal-code" placeholder="Code postal" required>
            </div>

            <button type="submit" id="pay-button">Payer {{ inscription_cour.formation.prix }} DT</button>
            <div class="loading-spinner" id="loading-spinner"></div>
            <p id="payment-message"></p>
        </form>
    </div>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        var stripe = Stripe("{{ stripe_public_key }}");
        var elements = stripe.elements();
        var cardElement = elements.create("card", { hidePostalCode: true });
        cardElement.mount("#card-element");

        document.getElementById("payment-form").addEventListener("submit", function(event) {
            event.preventDefault();
            
            var payButton = document.getElementById("pay-button");
            var paymentMessage = document.getElementById("payment-message");
            var loadingSpinner = document.getElementById("loading-spinner");

            var cardholderName = document.getElementById("cardholder-name").value;
            var postalCode = document.getElementById("postal-code").value;

            if (!cardholderName || !postalCode) {
                paymentMessage.textContent = "Veuillez remplir tous les champs obligatoires.";
                paymentMessage.style.color = "red";
                return;
            }

            payButton.disabled = true;
            loadingSpinner.style.display = "block";
            paymentMessage.textContent = "Traitement du paiement...";
            paymentMessage.style.color = "black";

            fetch("{{ path('create_payment_intent') }}", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    inscriptionId: {{ inscription_id }},
                    amount: {{ amount }},
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) throw new Error(data.error);

                return stripe.confirmCardPayment(data.clientSecret, {
                    payment_method: {
                        card: cardElement,
                        billing_details: {
                            name: cardholderName,
                            address: { postal_code: postalCode }
                        }
                    }
                });
            })
            .then(result => {
                if (result.error) throw new Error(result.error.message);

                return fetch("{{ path('payment_success', {'id': inscription_id}) }}", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ paymentIntentId: result.paymentIntent.id })
                });
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) throw new Error(data.error);

                alert("✅ Paiement réussi !");
                window.location.href = "{{ path('payment_success_page', {'id': inscription_id}) }}"; 
            })
            .catch(error => {
                console.error("Erreur :", error);
                paymentMessage.textContent = "❌ Erreur : " + error.message;
                paymentMessage.style.color = "red";
                payButton.disabled = false;
                loadingSpinner.style.display = "none";
            });
        });
    });
</script>


{% endblock %}
