{% extends 'baseAdmin.html.twig' %}

{% block title %}Liste des Évaluations{% endblock %}

{% block body %}
    <h2>Évaluations des Instructeurs</h2>
    <table class="table table-responsive" id="evaluations-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nom</th>
                <th>Email</th>
                <th>Score</th>
                <th>Niveau</th>
                <th>Statut</th>
                <th>Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for evaluation in evaluations %}
                <tr>
                    <td>{{ evaluation.id }}</td>
                    <td>{{ evaluation.instructor.nom ~ ' ' ~ evaluation.instructor.prenom }}</td>
                    <td>{{ evaluation.instructor.email }}</td>
                    <td>{{ evaluation.score }}</td>
                    <td>{{ evaluation.niveau }}</td>
                    <td>{{ evaluation.status ? 'Accepté' : 'Non Accepté' }}</td>
                    <td>{{ evaluation.dateCreation|date('Y-m-d H:i:s') }}</td>
                    <td>
                        <a href="{{ path('admin_evaluation_details', { id: evaluation.id }) }}" class="btn btn-sm btn-info">Détails</a>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
    {% if evaluations|length == 0 %}
        <p>Aucune évaluation trouvée.</p>
    {% endif %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // Function to fetch and update the evaluations list
        async function updateEvaluationsList() {
            // Ensure DOM is ready
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', () => updateEvaluationsList());
                return;
            }

            const currentTable = document.querySelector('table#evaluations-table');
            if (!currentTable) {
                console.warn('Evaluations table not found on this page. Current URL:', window.location.pathname);
                alert('Erreur : La liste des évaluations n’est pas disponible sur cette page. Rafraîchissez ou naviguez vers /admin/evaluations.');
                return;
            }

            try {
                console.log('Attempting to fetch evaluations list. URL:', '{{ path('admin_evaluations') }}');
                const response = await fetch('{{ path('admin_evaluations') }}', {
                    headers: {
                        'Cache-Control': 'no-cache', // Prevent browser caching
                        'X-Requested-With': 'XMLHttpRequest' // Indicate AJAX request
                    },
                    credentials: 'same-origin' // Ensure cookies/credentials are included
                });
                if (!response.ok) {
                    throw new Error(`Erreur réseau : ${response.status} - ${response.statusText}`);
                }
                const html = await response.text();
                console.log('AJAX response received, parsing HTML...');
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const newTable = doc.querySelector('table#evaluations-table');

                if (newTable) {
                    console.log('Updating table with new content...');
                    currentTable.innerHTML = newTable.outerHTML; // Simplified for speed
                    // Reattach event listeners to "Détails" buttons after dynamic update
                    document.querySelectorAll('table#evaluations-table a.btn-info').forEach(button => {
                        button.addEventListener('click', function(e) {
                            e.preventDefault();
                            window.location.href = this.href;
                        });
                    });
                } else {
                    console.warn('New table not found in response. Response HTML:', html.substring(0, 200) + '...');
                    alert('Erreur : Impossible de mettre à jour la liste des évaluations. Rafraîchissez la page manuellement.');
                }
            } catch (error) {
                console.error('Erreur lors de la mise à jour de la liste :', error);
                alert('Erreur lors de la mise à jour de la liste : ' + error.message);
            }
        }

        // Ensure DOM is ready before adding event listeners
        document.addEventListener('DOMContentLoaded', () => {
            // Listen for the popstate event (triggered by back/forward navigation)
            window.addEventListener('popstate', () => {
                console.log('Back button detected, updating evaluations list. Current URL:', window.location.pathname);
                updateEvaluationsList();
            });

            // Initial update on page load to ensure fresh data
            console.log('Page loaded, updating evaluations list. Current URL:', window.location.pathname);
            updateEvaluationsList();

            // Optional: Re-run update when the page is visible after being hidden (e.g., tab switch)
            document.addEventListener('visibilitychange', () => {
                if (document.visibilityState === 'visible') {
                    console.log('Page visible, updating evaluations list. Current URL:', window.location.pathname);
                    updateEvaluationsList();
                }
            });
        });
    </script>
{% endblock %}